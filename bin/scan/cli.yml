name: Redis Scanner
version: "1.0"
author: Alec Embke
about: Scan a Redis server or cluster, optionally returning different data sets while scanning.
args:
  - tracing:
      short: t
      long: tracing
      help: Whether or not to enable tracing via a local Jeager instance.
      takes_value: false
  - host:
      short: h
      long: host
      value_name: "STRING"
      help: The hostname of the redis server. If using a cluster only one host from the cluster is required.
      takes_value: true
      default_value: "127.0.0.1"
  - port:
      short: p
      long: port
      value_name: "NUMBER"
      help: The port for the redis server.
      takes_value: true
      default_value: "6379"
  - username:
      short: u
      long: username
      value_name: "STRING"
      help: An optional username to use when authenticating.
      takes_value: true
      default_value: ""
  - password:
      short: a
      long: password
      value_name: "STRING"
      help: An optional password or key to use when authenticating.
      takes_value: true
      default_value: ""
  - db:
      short: n
      long: db
      value_name: "NUMBER"
      help: An optional database to SELECT after connecting.
      takes_value: true
      default_value: ""
  - page-size:
      short: s
      long: page-size
      value_name: "NUMBER"
      help: The number of results to read per page when scanning, if applicable.
      takes_value: true
      default_value: "100"
  - page-delay:
      short: d
      long: page-delay
      help: An optional delay (in milliseconds) to apply between pages when scanning.
      takes_value: true
      value_name: "NUMBER"
      default_value: "0"
  - prefix:
      short: P
      long: prefix
      help: An optional prefix to supply to the SCAN command, if applicable.
      takes_value: true
      value_name: "STRING"
  - workers:
      short: W
      long: workers
      help: The number of worker threads to use when creating the Tokio runtime. This will not affect the number of connections used.
      takes_value: true
      value_name: "NUMBER"
      default_value: "128"
  - reconnect:
      long: reconnect
      help: Whether or not to enable automatic reconnect features.
      takes_value: false
  - sentinel:
      long: sentinel
      help: Whether or not the host is a sentinel server.
      takes_value: false
  - single-server:
      long: single-server
      help: Only scan the server from `-h`, even when connecting to a cluster.
      takes_value: false
  - status:
      long: print-status
      help: Print a message to stdout every 5 seconds showing the number of keys scanned so far.
      takes_value: false
  - skip-errors:
      long: skip-errors
      help: Skip operations on keys that return an error when operating on the key. These errors will be logged with the WARN log level.
      takes_value: false
  - cluster-concurrency:
      short: C
      long: cluster-concurrency
      help: The number of cluster nodes to scan concurrently, if applicable. Use `*` to scan all nodes concurrently.
      takes_value: true
      value_name: "NUMBER|*"
      default_value: "*"
subcommands:
  - sizes:
      about: Scan every key in the server or cluster, returning a sorted list of MEMORY USAGE results for each matching key.
      args:
        - samples:
            short: S
            long: samples
            help: The number of samples to use with the MEMORY USAGE command.
            takes_value: true
            value_name: "NUMBER"
        - match:
            short: m
            long: match
            help: A regular expression to use when filtering keys. Only keys that match this regexp will have their size checked.
            takes_value: true
            value_name: "STRING|REGEXP"
        - find:
            short: f
            long: find
            help: The "find" portion of a find-and-replace operation performed on each key after reading the key's size.
            takes_value: true
            value_name: "STRING|REGEXP"
        - replace:
            short: r
            long: replace
            help: The "replace" portion of a find-and-replace operation performed on each key after reading the key's size. This will be applied gobally on each key. If `-f` is supplied but this argument is not then the matching substrings from `-f` will be removed from each key in the output.
            takes_value: true
            value_name: "STRING"
        - limit:
            short: l
            long: limit
            help: The maximum number of results to return in the provided output format.
            takes_value: true
            value_name: "NUMBER"
            default_value: "1000"
        - sort:
            short: s
            long: sort
            help: The sort order to use when returning results.
            takes_value: true
            value_name: "ASC|DESC"
            default_value: "DESC"
        - output:
            short: o
            long: output-format
            help: The output format to use, if applicable.
            takes_value: true
            required: true
            value_name: "TABLE|JSON|CSV"
            default_value: "TABLE"
  - ttls:
      about: Scan every key in the server or cluster, returning a sorted list of TTL values for each matching key.
      args:
        - match:
            short: m
            long: match
            help: A regular expression to use when filtering keys. Only keys that match this regexp will have their TTL checked.
            takes_value: true
            required: true
            value_name: "STRING|REGEXP"
        - find:
            short: f
            long: find
            help: The "find" portion of a find-and-replace operation performed on each key after reading the key's TTL.
            takes_value: true
            value_name: "STRING|REGEXP"
        - replace:
            short: r
            long: replace
            help: The "replace" portion of a find-and-replace operation performed on each key after reading the key's TTL. This will be applied gobally on each key. If `-f` is supplied but this argument is not then the matching substrings from `-f` will be removed from each key in the output.
            takes_value: true
            value_name: "STRING"
        - limit:
            short: l
            long: limit
            help: The maximum number of results to return in the provided output format.
            takes_value: true
            required: true
            value_name: "NUMBER"
            default_value: "1000"
        - sort:
            short: s
            long: sort
            help: The sort order to use when returning results.
            takes_value: true
            value_name: "ASC|DESC"
            default_value: "DESC"
        - output:
            short: o
            long: output-format
            help: The output format to use, if applicable.
            takes_value: true
            required: true
            value_name: "TABLE|JSON|CSV"
            default_value: "TABLE"
  - touch:
      about: Scan every key in the server or cluster, running EXISTS on each key.
      args:
        - match:
            short: m
            long: match
            help: A regular expression to use when filtering keys. Only keys that match this regexp will be checked.
            takes_value: true
            required: true
            value_name: "STRING|REGEXP"
  - batch-del:
      about: Delete each key in the associated flat file with the associated batch size for each DEL operation.
      args:
        - really:
            long: really
            help: Yes, actually run this.
            takes_value: false
        - dry:
            short: d
            long: dry-run
            help: Perform a dry run, printing the DEL command that would run for each key in the input file. This will ignore `--really`.
            takes_value: false
        - file:
            short: f
            long: file
            help: A path to the file containing the list of keys to be deleted. The file should use a newline delimiter between each key.
            takes_value: true
            required: true
            value_name: "PATH"
        - batch:
            short: b
            long: batch
            help: The number of keys to specify per DEL command to the server.
            takes_value: true
            required: true
            value_name: "NUMBER"
            default_value: "50"
  - scan-del:
      about: Delete each key that matches the provided regular expression.
      args:
        - really:
            long: really
            help: Yes, actually run this.
            takes_value: false
        - dry:
            short: d
            long: dry-run
            help: Perform a dry run, printing the DEL command that would run for each matching key. This will ignore `--really`.
            takes_value: false
        - filter:
            short: f
            long: filter
            required: true
            takes_value: true
            value_name: "STRING|REGEXP"
            help: The filter to apply to each key before deleting. Only keys that match the provided filter will be deleted.
